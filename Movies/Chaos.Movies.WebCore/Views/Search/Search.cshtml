@using System.Collections.ObjectModel
@using Chaos.Movies.Contract
@model ReadOnlyCollection<MovieDto>

@using (Html.BeginForm("Search", "Search", FormMethod.Get))
{
    <h1>
        Search:
        @Html.TextBox("searchText")
    </h1>
}

@foreach (var movie in Model)
{
    <div class="row">
        <div class="col-md-12">
            <a href="@Url.Action("Movie", "View", new { movieId = movie.Id})">
                <div class="item right">
                    <div class="listIcon small">
                        <img src="~/images/icons/Movie.png" />
                    </div>
                    <div class="itemContent">
                        <div class="name">
                            <h4>@movie.Titles.UserTitle.Title (@movie.Year) (@movie.MovieType.Titles.UserTitle.Title)</h4>
                        </div>
                        <div class="ratingRow">
                            <div class="ratingIcon">
                                <img src="~/images/User.svg" />
                                <span class="ratingScore">@movie.UserRating.DisplayValue</span>
                            </div>
                            <div class="ratingBackground">
                                <div style="background-color: @movie.UserRating.HexColor; height: 100%; width: @movie.UserRating.Width;">
                                </div>
                            </div>
                            <div class="ratingStars">
                                <img src="~/images/StarRowTransparent.svg" />
                            </div>
                        </div>
                        <div class="ratingRow">
                            <div class="ratingIcon">
                                <img src="~/images/CMDB.png" />
                                <span class="ratingScore">@movie.TotalRating.DisplayValue</span>
                            </div>
                            <div class="ratingBackground">
                                <div style="background-color: @movie.TotalRating.HexColor; height: 100%; width: @movie.TotalRating.Width;">
                                </div>
                            </div>
                            <div class="ratingStars">
                                <img src="~/images/StarRowTransparent.svg" />
                            </div>
                        </div>
                        @{var imdb = movie.ExternalRatings.FirstOrDefault(e => e.ExternalSource.Name == "IMDB");}
                        @if (imdb != null)
                        {
                        <div class="ratingRow">
                            <div class="ratingIcon">
                                <img src="~/images/IMDB.ico" />
                                <span class="ratingScore">@imdb.DisplayValue</span>
                            </div>
                            <div class="ratingBackground">
                                <div style="background-color: @imdb.HexColor; height: 100%; width: @imdb.Width;">
                                </div>
                            </div>
                            <div class="ratingStars">
                                <img src="~/images/StarRowTransparent.svg" />
                            </div>
                        </div>
                        }
                    </div>
                </div>
            </a>
        </div>
    </div>
}