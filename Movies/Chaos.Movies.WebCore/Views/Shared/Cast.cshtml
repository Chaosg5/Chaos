@using Chaos.Movies.Contract
@model MovieDto
@foreach (var personAsCharacter in Model.Characters)
{
    <div class="row">
        <div class="item">
            <div class="itemContent">
                <a href="@Url.Action("Person", "View", new { movieId = personAsCharacter.PersonInRole.Person.Id})">
                    <div class="name">
                        <h4>@personAsCharacter.PersonInRole.Person.Name</h4>
                    </div>
                </a>
                <div class="ratingRow">
                    <div class="ratingIcon">
                        <span class="ratingScore">@personAsCharacter.PersonInRole.UserRating.DisplayValue</span>
                        <img src="~/images/User.svg" />
                    </div>
                    <div class="ratingBackground">
                        <div style="background-color: @personAsCharacter.PersonInRole.UserRating.HexColor; height: 100%; width: @((personAsCharacter.PersonInRole.UserRating.Value*10))%;">
                            <!--<div style="height: 100%; width: 100%; background-image: url(/images/DerivedBackground.png)"></div>-->
                        </div>
                    </div>
                    <div class="ratingStars clickable" onclick="savePersonRating(event, this, false, @personAsCharacter.PersonInRole.Person.Id, @personAsCharacter.PersonInRole.Role.Id, @personAsCharacter.PersonInRole.Department.Id);">
                        <img src="~/images/StarRowTransparent.svg" />
                    </div>
                </div>
                <div class="ratingRow">
                    <div class="ratingIcon">
                        <span class="ratingScore">@personAsCharacter.PersonInRole.Person.UserRating.DisplayValue</span>
                        <img src="~/images/User.svg" />
                    </div>
                    <div class="ratingBackground">
                        <div style="background-color: @personAsCharacter.PersonInRole.Person.UserRating.HexColor; height: 100%; width: @((personAsCharacter.PersonInRole.Person.UserRating.Value*10))%;">
                        </div>
                    </div>
                    <div class="ratingStars">
                        <img src="~/images/StarRowTransparent.svg" />
                    </div>
                </div>
                <div class="ratingRow">
                    <div class="ratingIcon">
                        <span class="ratingScore">@personAsCharacter.PersonInRole.TotalRating.DisplayValue</span>
                        <img src="~/images/CMDB.png" />
                    </div>
                    <div class="ratingBackground">
                        <div style="background-color: @personAsCharacter.PersonInRole.TotalRating.HexColor; height: 100%; width: @((personAsCharacter.PersonInRole.TotalRating.Value*10))%;">
                        </div>
                    </div>
                    <div class="ratingStars">
                        <img src="~/images/StarRowTransparent.svg" />
                    </div>
                </div>
                <div class="ratingRow">
                    <div class="ratingIcon">
                        <span class="ratingScore">@personAsCharacter.PersonInRole.Person.TotalRating.DisplayValue</span>
                        <img src="~/images/CMDB.png" />
                    </div>
                    <div class="ratingBackground">
                        <div style="background-color: @personAsCharacter.PersonInRole.Person.TotalRating.HexColor; height: 100%; width: @((personAsCharacter.PersonInRole.Person.TotalRating.Value*10))%;">
                        </div>
                    </div>
                    <div class="ratingStars">
                        <img src="~/images/StarRowTransparent.svg" />
                    </div>
                </div>
            </div>
            <a href="@Url.Action("Person", "View", new { movieId = personAsCharacter.PersonInRole.Person.Id})">
                <div class="listIcon">
                    <img src="~/images/icons/Male.png" />
                </div>
            </a>
        </div>
        <div class="item">
            <a href="@Url.Action("Character", "View", new { movieId = personAsCharacter.Character.Id})">
                <div class="listIcon">
                    <img src="~/images/icons/Female.png" />
                </div>
            </a>
            <div class="itemContent">
                <a href="@Url.Action("Character", "View", new { movieId = personAsCharacter.Character.Id})">
                    <div class="name">
                        <h4>@personAsCharacter.Character.Name</h4>
                    </div>
                </a>
                <div class="ratingRow">
                    <div class="ratingIcon">
                        <span class="ratingScore">@personAsCharacter.UserRating.DisplayValue</span>
                        <img src="~/images/User.svg" />
                    </div>
                    <div class="ratingBackground">
                        <div style="background-color: @personAsCharacter.UserRating.HexColor; height: 100%; width: @((personAsCharacter.UserRating.Value*10))%;">
                            <!--<div style="height: 100%; width: 100%; background-image: url(/images/DerivedBackground.png)"></div>-->
                        </div>
                    </div>
                    <div class="ratingStars clickable" onclick="saveCharacterRating(event, this, false, @personAsCharacter.Character.Id, @personAsCharacter.PersonInRole.Person.Id);">
                        <img src="~/images/StarRowTransparent.svg" />
                    </div>
                </div>
                <div class="ratingRow">
                    <div class="ratingIcon">
                        <span class="ratingScore">@personAsCharacter.Character.UserRating.DisplayValue</span>
                        <img src="~/images/User.svg" />
                    </div>
                    <div class="ratingBackground">
                        <div style="background-color: @personAsCharacter.Character.UserRating.HexColor; height: 100%; width: @((personAsCharacter.Character.UserRating.Value*10))%;">
                        </div>
                    </div>
                    <div class="ratingStars">
                        <img src="~/images/StarRowTransparent.svg" />
                    </div>
                </div>
                <div class="ratingRow">
                    <div class="ratingIcon">
                        <span class="ratingScore">@personAsCharacter.TotalRating.DisplayValue</span>
                        <img src="~/images/CMDB.png" />
                    </div>
                    <div class="ratingBackground">
                        <div style="background-color: @personAsCharacter.TotalRating.HexColor; height: 100%; width: @((personAsCharacter.TotalRating.Value*10))%;">
                        </div>
                    </div>
                    <div class="ratingStars">
                        <img src="~/images/StarRowTransparent.svg" />
                    </div>
                </div>
                <div class="ratingRow">
                    <div class="ratingIcon">
                        <span class="ratingScore">@personAsCharacter.Character.TotalRating.DisplayValue</span>
                        <img src="~/images/CMDB.png" />
                    </div>
                    <div class="ratingBackground">
                        <div style="background-color: @personAsCharacter.Character.TotalRating.HexColor; height: 100%; width: @((personAsCharacter.Character.TotalRating.Value*10))%;">
                        </div>
                    </div>
                    <div class="ratingStars">
                        <img src="~/images/StarRowTransparent.svg" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    savePersonRating = function (event, sender, rightToLeft, personId, roleId, departmentId) {
        var ratingValue = GetRatingFromPosition(event, sender, rightToLeft, 200);
        $.ajax({
            url: "@Url.Action("SavePersonRating", "View")",
            data: { movieId: @Model.Id, personId: personId, roleId: roleId, departmentId: departmentId, ratingValue: ratingValue },
            type: "POST",
            success: function () {
                $(sender).prev().children().first().css("width", ratingValue * 10 + "%");
                $(sender).prev().prev().children().first().text(ratingValue);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.responseText);
                alert(thrownError);
            }
        });
    };
    
    saveCharacterRating = function (event, sender, rightToLeft, characterId, personId) {
        var ratingValue = GetRatingFromPosition(event, sender, rightToLeft, 200);
        $.ajax({
            url: "@Url.Action("SaveCharacterRating", "View")",
            data: { movieId: @Model.Id, characterId: characterId, personId: personId, ratingValue: ratingValue },
            type: "POST",
            success: function () {
                $(sender).prev().children().first().css("width", ratingValue * 10 + "%");
                $(sender).prev().prev().children().first().text(ratingValue);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.responseText);
                alert(thrownError);
            }
        });
    };
</script>